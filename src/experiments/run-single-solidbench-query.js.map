{"version":3,"file":"run-single-solidbench-query.js","sourceRoot":"","sources":["run-single-solidbench-query.ts"],"names":[],"mappings":"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","sourcesContent":["import { ComunicaRunner } from '../packages/comunica-runner';\nimport { queries } from '../queries/solidbench-queries';\nimport { StatisticLinkDiscovery } from '@comunica/statistic-link-discovery';\nimport { StatisticLinkDereference } from '@comunica/statistic-link-dereference';\nimport { LoggerPretty} from '@comunica/logger-pretty';\nrunSingleQuery(queries.local_d_7_0, 3);\n\nasync function runSingleQuery(query: string, repeats: number, runner?: ComunicaRunner){\n    const totalTimeTaken = [];\n    const firstTs = [];\n    const lastTs = [];\n    const nResults = [];\n    for (let i = 0; i < repeats; i++){\n        const runner = new ComunicaRunner();\n        console.log(`${i+1}/${repeats}`);\n\n        let links = 0;\n        const statistic = new StatisticLinkDereference()\n        const dereferenced = new Set();\n        statistic.on((data) => {\n            dereferenced.add(data.url);\n            links++;\n        });\n\n        // let intermediateResults = 0;\n        // const statistic = new StatisticLinkDiscovery();\n        // const linksEmitted: Set<string> = new Set();\n        // const statisticIntermediateResults = new StatisticIntermediateResults();\n        // statistic.on((data) => {\n        //     if (!linksEmitted.has(data.edge[1])){\n        //         linksEmitted.add(data.edge[1]);\n        //         links++;\n        //     }\n        // });\n        // statisticIntermediateResults.on((data) => {\n        //     intermediateResults++\n        // });\n        // const timestamps = [];\n        // const start = performance.now();\n        const bs = await runner.executeQuery(query, {\n            \"lenient\": true, \n            noCache: true,\n            // log: new LoggerPretty({ level: 'debug' }),\n            [statistic.key.name]: statistic,\n            // [statisticIntermediateResults.key.name]: statisticIntermediateResults\n        });\n        const result = await trackTimestamps(bs);\n        totalTimeTaken.push(result.endTime);\n        firstTs.push(result.timestamps[0]);\n        lastTs.push(result.timestamps[result.timestamps.length-1]);\n        nResults.push(result.nResults);\n        console.log(`${(totalTimeTaken[totalTimeTaken.length-1]).toFixed(4)} seconds, ${nResults[nResults.length-1]} results,\n         ${dereferenced.size} links`);  \n        await sleep(500);\n    }\n    const {mean, std} = getStats(totalTimeTaken);\n    const {mean: meanFirst, std: stdFirst}  = getStats(firstTs);\n    const {mean: meanLast, std: stdLast} = getStats(lastTs);\n    const {mean: meanResult, std: stdResults} = getStats(nResults);\n    console.log(`Execution time: ${mean}(${std})`);\n    console.log(`First ts: ${meanFirst}(${stdFirst})`);\n    console.log(`Last ts: ${meanLast}(${stdLast})`);\n    console.log(`Results: ${meanResult}(${stdResults})`)\n    \n}\n\nfunction trackTimestamps(bs: NodeJS.ReadableStream, ): Promise<{ timestamps: number[], endTime: number, nResults: number }> {\n    return new Promise((resolve, reject) => {\n        const start = performance.now();\n        const timestamps: number[] = [];\n        let nResults = 0;\n\n        bs.on('data', () => {\n            timestamps.push((performance.now() - start) / 1000);\n            nResults += 1;\n            console.log(\"Found data\")\n        });\n\n        bs.on('end', () => {\n            const endTime = (performance.now() - start) / 1000;\n            resolve({ timestamps, endTime, nResults });\n        });\n        bs.on('error', (err) => {\n            console.log(err);\n            const endTime = (performance.now() - start) / 1000;\n            reject({timestamps, endTime, nResults })\n        })\n    });\n}\n\nasync function runSingleQueryStreaming(runner: ComunicaRunner, query: string, repeats: number){\n    for (let i = 0; i < repeats; i++){\n        console.log(`${i+1}/${repeats}`)\n        let links = 0;\n        const statistic = new StatisticLinkDiscovery()\n        statistic.on((data) => {\n            links++;\n        });\n\n        const bs = await runner.executeQuery(query, {\n            \"lenient\": true, \n            [statistic.key.name]: statistic,\n        });\n        const start = performance.now();\n        bs.on('data', () => {\n            console.log(`Result after: ${(performance.now() - start)/1000} seconds`);\n        });\n        bs.on('end', () => {\n            console.log(`${links} links in ${(performance.now()-start)/1000} seconds`);\n        });\n    }\n}\n\nfunction getStats(arr: number[]): { mean: number; std: number } {\n    if (arr.length === 0) return { mean: 0, std: 0 };\n  \n    const mean = arr.reduce((sum, val) => sum + val, 0) / arr.length;\n  \n    const variance =\n      arr.reduce((sum, val) => sum + Math.pow(val - mean, 2), 0) / arr.length;\n  \n    const std = Math.sqrt(variance);\n  \n    return { mean, std };\n}\n\nfunction sleep(ms: number) {\n    return new Promise((resolve) => {\n      setTimeout(resolve, ms);\n    });\n  }\n`\nDefault:\nExecution time: 4.186129396125001(0.3234682246751786)\nFirst ts: 0.8993861942500014(0.1947914953027016)\nLast ts: 1.11254683425(0.22251503310573326)\nResults: 6(0)\nFixed-min-index:\nExecution time: 2.6007704186249994(0.47325979027136944)\nFirst ts: 0.7889877312499991(0.43696611212360453)\nLast ts: 0.8390577231249994(0.45009665646657526)\nResults: 6(0)\nLottery:\nExecution time: 2.5118684554999997(0.239776353242635)\nFirst ts: 0.6692206422500001(0.19015717899060885)\nLast ts: 0.7392682557499998(0.15377096900358228)\nResults: 6(0)\nLottery signature-based:\nExecution time: 3.4850449025(2.4942489317108425)\nFirst ts: 0.7051670757500001(0.10495525440143293)\nLast ts: 0.7672689716250004(0.20778836106071646)\nResults: 6(0)\n\n`"]}